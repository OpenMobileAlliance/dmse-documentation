__NUXT_JSONP__("/object-support", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P){return {data:[{document:{slug:"object-support",description:"This is the description of Object 22",title:"22 - Object Observe Notify",position:n,category:"Object Guidelines",toc:[{id:u,depth:n,text:v},{id:w,depth:n,text:x},{id:y,depth:k,text:z},{id:A,depth:n,text:B},{id:C,depth:k,text:D},{id:E,depth:k,text:F},{id:G,depth:k,text:H},{id:I,depth:k,text:J},{id:K,depth:k,text:L}],body:{type:"root",children:[{type:b,tag:q,props:{id:u},children:[{type:b,tag:e,props:{ariaHidden:f,href:"#scope",tabIndex:g},children:[{type:b,tag:h,props:{className:[i,j]},children:[]}]},{type:a,value:v}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This document defines an Object to be used to flexibly report resources across different objects in a single client notification\r\nmessage under different conditions and rules."}]},{type:a,value:c},{type:b,tag:q,props:{id:w},children:[{type:b,tag:e,props:{ariaHidden:f,href:"#introduction",tabIndex:g},children:[{type:b,tag:h,props:{className:[i,j]},children:[]}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The Information Reporting Interface is used by a LwM2M Server to observe any changes of resources on a registered\r\nLwM2M Client, receiving notifications when new values are available. In LightweightM2M version 1.0, a single notification\r\nmessage can only include resources in a single object. In LightweightM2M version 1.1, the LwM2M Enabler can surport a\r\nmechanism for atomic reporting of resources across different objects in a single notification. However, the conditions and\r\nrules of a notification message are too simple to satisfy complex scenarios that described as follows:"}]},{type:a,value:c},{type:b,tag:M,props:{},children:[{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:"The notification message can only be sent when multiple subscription conditions are met at the same time."}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:"Only some of the observed resources are included in the notification message, and other resources are only used as"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"subscription conditions."}]},{type:a,value:c},{type:b,tag:M,props:{},children:[{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:"Compared with the last notification message, this notification message only contains the changed resources."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"In order to satisfy the requirements described above, this specification defines an Object to realize flexibly reporting\r\nresources across different objects in a single client notification message under different conditions and rules."}]},{type:a,value:c},{type:b,tag:l,props:{id:y},children:[{type:b,tag:e,props:{ariaHidden:f,href:"#version-10",tabIndex:g},children:[{type:b,tag:h,props:{className:[i,j]},children:[]}]},{type:a,value:z}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Version 1.0 of the Virtual Observe Notify object is used to support following functionalities."}]},{type:a,value:c},{type:b,tag:"ol",props:{},children:[{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:"Reporting resources across different objects in a single client notification message."}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:"Supporting AND conditions for subscription, that is, a single client notification can be sent just when multiple"}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"subscription conditions are met at the same time.\r\n3. Using resources as only the condition for Observe operation.\r\n4. Reporting changed resources by a notification message."}]},{type:a,value:c},{type:b,tag:q,props:{id:A},children:[{type:b,tag:e,props:{ariaHidden:f,href:"#virtual-observe-notify-use-cases",tabIndex:g},children:[{type:b,tag:h,props:{className:[i,j]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:l,props:{id:C},children:[{type:b,tag:e,props:{ariaHidden:f,href:"#overview",tabIndex:g},children:[{type:b,tag:h,props:{className:[i,j]},children:[]}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The Virtual Observe Notify Object provides a mechanism to observe and notify multiple resources by less messages between\r\nLwM2M Client and Server which are in one object\u002Fobject instance or across multiple objects\u002Fobject instances. This\r\nmechanism can reduce the message numbers and improve communication efficiency between LwM2M Client and LwM2M\r\nServer."}]},{type:a,value:c},{type:b,tag:l,props:{id:E},children:[{type:b,tag:e,props:{ariaHidden:f,href:"#observe-and-notify-multiple-resources",tabIndex:g},children:[{type:b,tag:h,props:{className:[i,j]},children:[]}]},{type:a,value:F}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This use case descripts the procedure when the LwM2M Server wants to get the report of multiple Resources of different\r\nObjects. It specifies the usage of Resource “ObserveLinks” and “Report”.\r\nThe LwM2M Server initiates a Write request for changes of the Resource ObserveLinks (\u002F22\u002F0\u002F0), which includes the\r\nResources within an Object or different Objects within the LwM2M Client.\r\nFor example, the LwM2M Server wants to get the report of the Radio Signal Strength (\u002F4\u002F0\u002F2) and Battery Level (\u002F3\u002F0\u002F9)\r\nresources when the Radio Signal Strength is less than -120dBm or the Battery Level is less than 50%."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:o,props:{alt:p,src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F3258579\u002F122974508-404f2700-d347-11eb-95d9-53c0a89db59f.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 1: The LwM2M Server sends the Write-Composite request to LwM2M Client to observe multiple resources which are\r\nincluded in the Resource ObserveLinks (\u002F22\u002F0\u002F0). The payload in the request is an array of application\u002Flink-format CoRE\r\nLinks. In this example, the payload includes Radio Signal Strength (\u002F4\u002F0\u002F2) and Batter Level (\u002F3\u002F0\u002F9) with their “lt”\r\nAttributes.\r\nStep 2: The LwM2M Client sends the ACK to the LwM2M Server and starts to observe the two resources. When any of the\r\ntwo resource meets its condition set by the LwM2M Server using R-Attributes, the LwM2M Client writes the two resources\r\ninto the Resource Report (\u002F22\u002F0\u002F1).\r\nStep 3: The LwM2M Server sends the Write-attribute request to the LwM2M Client to update the Attributes attached to the\r\nResource \u002F22\u002F0\u002F1 (Report).\r\nOMA-TS-LWM2M_VirtualObserveNotify-V1_0-20190711-A Page 9 (17)\r\n© 2019 Open Mobile Alliance.\r\nUsed with the permission of the Open Mobile Alliance under the terms as stated in this document. [OMA-Template-Spec-20190101-I]\r\nStep 4: The LwM2M Client sends the ACK to the LwM2M Server.\r\nStep 5: The LwM2M Server initiates an observation request for changes of the Resource Report (\u002F22\u002F0\u002F1) within the LwM2M\r\nClient.\r\nStep 6: The LwM2M Client sends the ACK to the LwM2M Server.\r\nStep 7: The LwM2M Client sends the Notify message to the LwM2M Server when the timer expires.\r\nStep 8: The LwM2M Server sends Cancel Observation operation to the LwM2M Client to stop the observation of the\r\nResource Report within the LwM2M Client.\r\nStep 9: The LwM2M Server sends Write  request to LwM2M Client to stop the observation of the resources which are\r\nincluded in the Resource ObserveLinks."}]},{type:a,value:c},{type:b,tag:l,props:{id:G},children:[{type:b,tag:e,props:{ariaHidden:f,href:"#observe-multiple-resources-and-notify-changed-resources",tabIndex:g},children:[{type:b,tag:h,props:{className:[i,j]},children:[]}]},{type:a,value:H}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This use case descripts the procedure when the LwM2M Server wants to get the changed Resources in the multiple Resources. It specifies the usage of Resource “ResourceFilter”."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"The LwM2M Server initiates a Write request for changes of the Object Instant (\u002F22\u002F0), the payload includes ObserveLinks (\u002F22\u002F0\u002F0) and ResourceFilter (\u002F22\u002F0\u002F2)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For example, the DM server (LwM2M Server) needs changed Resources of the Device Object (\u002F3\u002F0) and Connectivity Monitoring Object (\u002F4\u002F0) of the water meter (LwM2M Client) via NB-IoT to monitor the device."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:o,props:{alt:p,src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F3258579\u002F122974585-5a890500-d347-11eb-9ebd-f5bb1d39b45f.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 1: The LwM2M Server sends the Write-Composite request to LwM2M Client to observe multiple resources which are included in the Resource ObserveLinks (\u002F22\u002F0\u002F0). The request payload includes the Resource ObserveLinks (\u002F22\u002F0\u002F0) and\r\nResource ResourceFilter (\u002F22\u002F0\u002F2). In this example, the value of the Resource ObserveLinks are Device Object Instance 0 and Connectivity Monitoring Object Instance 0; the value of the Resource ResourceFilter is 1."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 2: The LwM2M Client sends the ACK to the LwM2M Server and starts to observe the two object instance. When any Resource of two Objects is changed compared with the last notification message and meets its condition set by the LwM2M\r\nServer using R-Attributes, the LwM2M Client writes the changed Resources into the Resource Report (\u002F22\u002F0\u002F1). The Resources which are not changed compared with the last notification aren’t written into the Resource Report (\u002F22\u002F0\u002F1).\r\nNote: If any Resource of two Objects is not changed which is compared with the value in the last notification message, the LwM2M Client doesn’t write any Resource into the Resource Report (\u002F22\u002F0\u002F1)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 3: The LwM2M Server sends the Write-attribute request to the LwM2M Client to update the Attributes’ values of Resource Report (\u002F22\u002F0\u002F1)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:r}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:s}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:t}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 7: The LwM2M Client sends the Notify message to the LwM2M Server including the changed resources in the Resource ObserveLink."}]},{type:a,value:c},{type:b,tag:l,props:{id:I},children:[{type:b,tag:e,props:{ariaHidden:f,href:"#observe-multiple-resources-and-notify-different-resources",tabIndex:g},children:[{type:b,tag:h,props:{className:[i,j]},children:[]}]},{type:a,value:J}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This use case descripts the procedure when the LwM2M Server wants to get the different Resources from observed the multiple Resources. It specifies the usage of Resource “ReportLinks” and “ObserveRelation”."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:N}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For example, the shared bike operator need protect the shared bike security. The LwM2M Server needs location (\u002F6\u002F0\u002F1 and \u002F6\u002F0\u002F2) of Device Object (\u002F6\u002F0) when the state of the lock is switched-off and the speed of the client is more than 1. The notification may trigger the LwM2M Server to trace the client and or do other processing."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:o,props:{alt:p,src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F3258579\u002F122974759-8a380d00-d347-11eb-83a1-444e4497ffbf.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 1: The LwM2M Server sends the Write-Composite request to LwM2M Client to observe multiple resources which are included in the Resource ObserveLinks (\u002F22\u002F0\u002F0). The request payload includes the Resource ObserveLinks (\u002F22\u002F0\u002F0), ReportLinks (\u002F22\u002F0\u002F3) and ObserveRelation (\u002F22\u002F0\u002F4). In this example, the value of the Resource ObserveLinks are the Resource Speed (\u002F6\u002F0\u002F6) of Location Object (\u002F6\u002F0) with the “gt” attribute, and the Digital Input State resource (\u002F3342\u002F0\u002F5500) of On\u002FOff switch Object (\u002F3342\u002F0) with the “lt” attribute. The value of the Resource ReportLinks are the Resource Latitude (\u002F6\u002F0\u002F0) and the Resource Longitude (\u002F6\u002F0\u002F1. The value of ObserveRelation is 1."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 2: The LwM2M Client sends the ACK to the LwM2M Server and starts to observe the two resources. When the Digital Input State resource and the Resource Speed meet its condition set by the LwM2M Server using R-Attributes at the same time, that is the state of the lock is switched-off and the Speed of the bike is more than 1, the LwM2M Client writes the value of the Resource Latitude (\u002F6\u002F0\u002F0) and Resource Longitude (\u002F6\u002F0\u002F1) into the Resource Report (\u002F22\u002F0\u002F1)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:O}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:r}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:s}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:t}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 7: The LwM2M Client sends the Notify message to the LwM2M Server including the resources in the Resource ReportLinks."}]},{type:a,value:c},{type:b,tag:l,props:{id:K},children:[{type:b,tag:e,props:{ariaHidden:f,href:"#observe-multiple-resources-and-notify-partial-resources",tabIndex:g},children:[{type:b,tag:h,props:{className:[i,j]},children:[]}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"This use case descripts the procedure when the LwM2M Server wants to get the partial Resources in the multiple Resources. It specifies the usage of Resource “ReportLinks” and “ObserveRelation”."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:N}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"For example, the LwM2M Server want to check the NB-IoT network coverage, and ask the LwM2M Client to report Radio Signal Strength when Network Bearer is NB-IoT and Radio Signal Strength is less than one threshold."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:b,tag:o,props:{alt:p,src:"https:\u002F\u002Fuser-images.githubusercontent.com\u002F3258579\u002F122974909-aa67cc00-d347-11eb-9d3f-a60e2899bc95.png"},children:[]}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 1: The LwM2M Server sends the Write-Composite request to LwM2M Client to observe multiple resources which are included in the Resource ObserveLinks (\u002F22\u002F0\u002F0). The request payload includes the Resource ObserveLinks (\u002F22\u002F0\u002F0), ReportLinks (\u002F22\u002F0\u002F3) and ObserveRelation (\u002F22\u002F0\u002F4). In this example, the value of the Resource ObserveLinks are the Resource Network Bearer (\u002F4\u002F0\u002F0) of Connectivity Monitoring (\u002F4\u002F0) with the “gt” and “lt” attribute, and the Resource Radio Signal Strength (\u002F4\u002F0\u002F2) of Connectivity Monitoring (\u002F4\u002F0) with the “lt” attribute . The value of the Resource ReportLinks are the Resource Radio Signal Strength (\u002F4\u002F0\u002F2). The value of ObserveRelation is 1."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 2: The LwM2M Client sends the ACK to the LwM2M Server and starts to observe the two resources. When the Network Bearer and Radio Signal Strength respectively meets its condition set by the LwM2M Server using R-Attributes and meets the report conditions which is the value of the ObserveRelation Resource, the LwM2M Client writes the value of the Resource Radio Signal Strength (\u002F4\u002F0\u002F2) into the Resource Report (\u002F22\u002F0\u002F1)."}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:O}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:r}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:s}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:t}]},{type:a,value:c},{type:b,tag:d,props:{},children:[{type:a,value:"Step 7: The LwM2M Client sends the Notify message to the LwM2M Server."}]}]},dir:"\u002Fen",path:"\u002Fen\u002Fobject-support",extension:".md",createdAt:P,updatedAt:P,to:"\u002Fobject-support"},prev:{slug:"enablers",title:"LwM2M Enablers",to:"\u002Fenablers"},next:null}],fetch:{},mutations:[]}}("text","element","\n","p","a","true",-1,"span","icon","icon-link",3,"h3","li",2,"img","image","h2","Step 4: The LwM2M Client sends the ACK to the LwM2M Server.","Step 5: The LwM2M Server initiates an observation request for changes of the Resource Report (\u002F22\u002F0\u002F1) within the LwM2M Client.","Step 6: The LwM2M Client sends the ACK to the LwM2M Server.","scope","Scope","introduction","Introduction","version-10","Version 1.0","virtual-observe-notify-use-cases","Virtual Observe Notify Use cases","overview","Overview","observe-and-notify-multiple-resources","Observe and Notify Multiple Resources","observe-multiple-resources-and-notify-changed-resources","Observe Multiple Resources and Notify Changed Resources","observe-multiple-resources-and-notify-different-resources","Observe Multiple Resources and Notify Different Resources","observe-multiple-resources-and-notify-partial-resources","Observe Multiple Resources and Notify Partial Resources","ul","The LwM2M Server initiates a Write request for changes of the Object Instant (\u002F22\u002F0), the payload includes ObserveLinks (\u002F22\u002F0\u002F0), ReportLinks (\u002F22\u002F0\u002F3) and ObserveRelation (\u002F22\u002F0\u002F4).","Step 3: The LwM2M Server sends the Write-attribute request to the LwM2M Client to update the Attributes’ values of Resource \u002F22\u002F0\u002F1 (Report).","2021-12-01T19:21:50.518Z")));